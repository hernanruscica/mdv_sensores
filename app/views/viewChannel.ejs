
<%- include('partials/cabecera', {titulo: "MDV Sensores - Ver Canal", nombre: user.nombre_1, apellido: user.apellido_1}) %>
  

<div class="container my-5 py-3 " >
<% if (typeof user !== 'undefined' && user !== null && user.nombre_1 && user.apellido_1) { %>
    <h1>Canal "<%= currentChannel.nombre %>"</h1>   

    <!--Breadcrumb-->
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item">
          <a href="#" onclick="goBack()" >
            <i class="fas fa-arrow-left"></i> Volver
          </a>
        </li>   
        <li class="breadcrumb-item"><a href="/">Inicio</a></li>        
        <li class="breadcrumb-item"><a href="/users/dashboard">Panel de control</a></li> 
        <li class="breadcrumb-item"><a href="/locations/all">Ubicaciones</a></li>   
         <li class="breadcrumb-item"><a href="/dataloggers/all">Dataloggers</a></li>  
        <!--<li class="breadcrumb-item"><a href="/locations/view/<%= location.id %>"><%= location.nombre %></a></li>  -->
        <li class="breadcrumb-item"><a href="/dataloggers/view/<%= datalogger.id %>"><%= datalogger.nombre %></a></li>  
        <li class="breadcrumb-item active" aria-current="page">Ver Canal</li>
      </ol>
    </nav>
    <!-- <p class="fs-5 mt-5">En esta sección usted puede ver la información de este canal.</p>         -->

    <div class="d-flex flex-column flex-lg-row ">
      <!-- Inicio  de la Card de info general-->
      <div class="card m-3 w-100">
          <div class="card-body">            
              <h5 class="card-title">
                Información general
              </h5>
              <!-- Nombre del canal -->
              <p class="card-text">Nombre : <%= currentChannel.nombre %></p>
              <!-- Descripcion -->
              <p class="card-text">Descripcion : <%= currentChannel.descripcion %></p>
              <!-- Foto -->
              <img src="" class="card-img-top" alt="Foto del Canal ">            
              <!-- Fecha de creacion -->
              <p class="card-text">Creado el <%= formatearFecha(currentChannel.fecha_creacion) %></p>
              <div class="container row justify-content-start">
                <a href="/dataloggers/editform/1" class="btn btn-secondary col-5 col-lg-6">Editar Canal</a>
              </div>
          </div>        
      </div>
      <!-- Fin de la Card de info general-->      
    </div>    
    
    <div class="d-flex flex-column flex-lg-row ">
      <!-- Inicio  de la Card de vision general de datos 
       col-12 col-lg-6 -->
      <div class="card m-3">
        <div class="card-body d-flex flex-wrap justify-content-between align-items-start">
          <div>
              <h5 class="card-title">Vision general de Datos</h5>
              <!-- Promedios relacion de uso -->
              <p class="card-text">Relación de uso. Promedio última hora: 40% - Ultimas 24 Hs.: 46,1%</p>
              <!-- Horas de uso desde -->
              <p class="card-text">Horas de uso desde 10/05/2021: 128 Hs.</p>
              <!-- alarma fecha mantenimiento preventivo -->
              <p class="card-text">Próximo mantenimiento preventivo: 29/03/2024</p>
              <!-- Usuario afectado -->
              <p class="card-text">Operario a cargo: Juan Perez</p>              
          </div>
          <!-- Foto -->
          <img src="/images/relojPromFunc.png" class="card-img-top order-first order-md-last" style="height: auto; width: 200px;" alt="Foto del reloj de promedio de funcionamiento">
        </div> 
      </div>
      <!-- Fin de la Card de vison general de datos-->

      <!-- Inicio  de la Card de vision general de datos 2-->
      <div class="card m-3 col-12 col-lg-6">
        <div class="card-header">
          <h5 class="card-title">Alarmas vigentes para el canal <em>"<%= currentChannel.nombre %>"</em></h5> 
         </div>
         <!-- d-flex flex-wrap justify-content-between align-items-start -->
        <div class="card-body ">         
                       
              <!-- Promedios relacion de uso -->
              <!-- <p class="card-text"></p> -->
              <ul class="list-group list-group-flush ">
              <% if (channelAlarms.length> 0 && channelAlarms.some(alarm => alarm.estado == 1)) { 
                channelAlarms.forEach((alarm, index)=> { 
                  if (alarm.estado == 1){%>
                    <li class="list-group-item my-2 ">
                      <h6 class="card-title">Alarma #<%= index + 1 %> :  <%= alarm.nombre %></h6>     
                      <p class="card-text"> <span class="fst-italic"> Creada el <%= formatearFecha(alarm.fecha_creacion) %></span><br>
                      <span class="fs-5"><%= alarm.descripcion %></span> <br>              
                      <span class="text-success ">Mínimo: <%= alarm.min %></span> - <span class="text-danger">Máximo: <%= alarm.max %></span> - Periodo de tiempo: <%= alarm.periodo_tiempo %></p>
                      <div>
                        <a href="/alarms/view/<%= alarm.id %>" class="btn btn-primary  mb-2">Ver</a>
                        <button type="button" class="btn btn-secondary  mb-2"
                          data-id="<%= alarm.id %>" 
                          data-dataloggerid="<%= datalogger.id %>" 
                          data-channelid="<%= alarm.canal_id %>" 
                          data-table="<%= alarm.tabla %>" 
                          data-column="<%= alarm.columna %>" 
                          data-state="<%= alarm.estado %>" 
                          data-name="<%= alarm.nombre %>"
                          data-description="<%= alarm.descripcion %>"
                          data-max="<%= alarm.max %>"
                          data-min="<%= alarm.min %>"
                          data-timeperiod="<%= alarm.periodo_tiempo %>"
                          onclick="editarAlarma(event)"
                        >Editar</button>

                        <button type="button" class="btn btn-danger  mb-2 " id="eliminarAlarma"
                          data-alarm_id="<%= alarm.id %>" 
                          data-nombre="<%= alarm.nombre %>" 
                          data-datalogger_id="<%= datalogger.id %>"                        
                          data-channel_id="<%= currentChannel.id %>"
                          onclick="eliminarAlarma(event)"                        
                          >Eliminar</button>
                      </div>
                    </li>
                <%}})
              }else{
                %> 
                  <p class="card-text">No existen alarmas para este canal!</p>
                  <%
                }
                %>
                <li class="list-group-item my-2 ">
                  <button type="button" class="btn btn-success  mb-2" id="agregarAlarma"
                    data-dataloggerid="<%= datalogger.id %>" 
                    data-channelid="<%= currentChannel.id %>" 
                    data-table="<%= datalogger.nombre_tabla %>" 
                    data-column="<%= currentChannel.nombre_columna %>" 
                    data-userid="<%= user.id %>"
                    onclick="agregarAlarma(event)"
                  >Agregar alarma</a>
                </li>
              </ul>
              
              
        </div> 
      </div>
      <!-- Fin de la Card de vison general de datos 2-->    

    </div>
    
   
      <!-- Principio de la Card de 1 canal analogico o digital-->
      <div class="card m-3 w-100">
        <div class="card-body">
          <h5 class="card-title">
            Canal <%= (currentChannel.nombre_columna.startsWith('a')) ? 'analogico' : 'digital' %> #<%= currentChannel.nombre_columna %> "<em><%= currentChannel.nombre %></em>"
          </h5>    
          <p class="card-text">
            <%= currentChannel.descripcion %>
          </p>
          <!-- Ejemplo de id para los graficos 'chart_a1 o chart_d1' -->
          <div id="chart_<%= currentChannel.nombre_columna %>"></div>  
          <p class="card-text">            
            <button id="<%= currentChannel.nombre_columna %>_cambiarSerieBtn"  value="24">Cambiar serie</button>
            <label for="<%= currentChannel.nombre_columna %>_cambiarSerieBtn" id="<%= currentChannel.nombre_columna %>_cambiarSerieLabel">Ultimas 24 Hs.</label> - 
            Valor MAX: <strong><span id="<%= currentChannel.nombre_columna %>_max_value"></span></strong> -  Valor MIN: <strong><span id="<%= currentChannel.nombre_columna %>_min_value">></span></strong> <br>                                                    
          </p>
        </div>
      </div>
      <!-- Fin  de la Card de 1 canal analogico o digital-->   
    

  <% } else { %>
    <h1>Error: Usuario no encontrado</h1>
  <% } %>
</div>
 
    



<!-- Incluye ApexCharts.js -->
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

<script>



//El script accede a los datos enviados desde el controlador - Esto se podria hacer consultando a una API que consulte a un endpoint en el servidor node.js
const dataChannels= <%- JSON.stringify(dataChannels || []) %>;  
const currentChannel= <%- JSON.stringify(currentChannel || []) %>;    
  
  //console.log(dataChannels, currentChannel);  
  
  const showAnalogCard = (currentChannel, dataChannels) => {  
    /* Preparacion de datos   para mostrar datos analogicos  */
    const myFactor = parseFloat(currentChannel.multiplicador);
    const myTimeStamps = dataChannels.map(data => data.fecha_local);
    const valuesInst = dataChannels.map(data => (data.inst * myFactor).toFixed(2));      
    const valuesMax = dataChannels.map(data => (data.max * myFactor).toFixed(2));
    const valuesMin = dataChannels.map(data => (data.min * myFactor).toFixed(2));         
    const $maxValue = document.getElementById(`${currentChannel.nombre_columna}_max_value`); 
    const $minValue = document.getElementById(`${currentChannel.nombre_columna}_min_value`);
    const $alarmMax = document.getElementById(`${currentChannel.nombre_columna}_alarm_max`);
    const $alarmMin = document.getElementById(`${currentChannel.nombre_columna}_alarm_min`);
    $maxValue.innerHTML = Math.max(...valuesMax);
    $minValue.innerHTML = Math.min(...valuesMin);
       
      
    // Datos del gráfico
    var options = { 
        title: {
        text : currentChannel.canal_nombre
        },
      chart: {
        type: 'line',
        height: 300,
        width: "100%",
        background: '#f4f4f4',          
      },
      
      series: [        
      {       
        name: "Maxima",
        data: valuesMax,
        color: '#e29578'
      },
      {       
        name: "Promedio",
        data: valuesInst,
        color: '#83c5be'
      },        
      {       
        name: "Minima",
        data: valuesMin,
        color: '#006d77'
      }
      ],
      xaxis: {
        categories: myTimeStamps,
        type: 'datetime'
      },
      stroke: {
      show: true,
      curve: 'straight',
      lineCap: 'butt',
      colors: undefined,
      width: 1,
      dashArray: 0, 
    },
    tooltip: {
      x: {
        show: true,
        format: 'dd/MMM - HH:mm ',
        formatter: undefined,
    }
    }
    }  
    // Inicializar el gráfico chart_a1
    const idNameChart = `chart_${currentChannel.nombre_columna}`;
    var chart = new ApexCharts(document.getElementById(idNameChart), options);  

    // Renderizar el gráfico      
    chart.render();

    
  }


  const showDigitalCard = (currentChannel, dataChannels) => {  
    //console.log(dataChannels.filter(data => data.channel == currentChannel.nombre_columna));  
    const dataChannel = [...dataChannels.filter(data => data.channel == currentChannel.nombre_columna)[0].data];
    console.log(dataChannel);

    const $maxValue = document.getElementById(`${currentChannel.nombre_columna}_max_value`); 
    const $minValue = document.getElementById(`${currentChannel.nombre_columna}_min_value`);
    const $alarmMax = document.getElementById(`${currentChannel.nombre_columna}_alarm_max`);
    const $alarmMin = document.getElementById(`${currentChannel.nombre_columna}_alarm_min`);

    const $cambiarSerieBtn = document.getElementById(`${currentChannel.nombre_columna}_cambiarSerieBtn`);
    const $cambiarSerieLabel = document.getElementById(`${currentChannel.nombre_columna}_cambiarSerieLabel`);
    $cambiarSerieBtn.addEventListener('click', (e) => {   
      $cambiarSerieLabel.innerHTML = $cambiarSerieBtn.value == '24' ? 'Ultima hora' : 'Ultimas 24 Hs.';
      $cambiarSerieBtn.value = $cambiarSerieBtn.value == '24' ? '1' : '24';
      $maxValue.innerHTML = $cambiarSerieBtn.value == '24' ? maxPorcEncendido : maxPorcEncendidoOneHour;
      $minValue.innerHTML = $cambiarSerieBtn.value == '24' ? minPorcEncendido : minPorcEncendidoOneHour;
          
      chart.updateOptions({
        title: {
        text : `Porcentaje de encendido - ${$cambiarSerieLabel.innerHTML}`
        },
        series: [        
            {       
              name: "MAX % Enc. / Apag.",
              data: $cambiarSerieBtn.value == '1' ?  maxArrayOneHour : maxArray,
              color: 'red'             
            },
            {       
              name: "Porcentaje de encendido",
              data: $cambiarSerieBtn.value == '1' ?  dataGroupByThreeOneHour.porc_encendido : dataGroupByThree.porc_encendido,
              color: '#e29578'             
            },
            {       
              name: "MIN % Enc. / Apag.",
              data: $cambiarSerieBtn.value == '1' ?  minArrayOneHour : minArray,
              color: 'green'             
            },                 
            ],
              xaxis: {
              categories: $cambiarSerieBtn.value == '1' ?  dataGroupByThreeOneHour.fecha_local : dataGroupByThree.fecha_local,
              type: 'datetime'      
          }
      })
    });

    /* Preparacion de datos   para mostrar datos analogicos  */
    const dataAll = {
        fecha_local: [],
        tiempo: [],
        porc_encendido: []
      };
        
    dataAll.fecha_local = dataChannel.map(data => data.fecha_local);            
    dataAll.tiempo = dataChannel.map(data => data.tiempo);
    dataAll.porc_encendido = dataChannel.map(data => data.porc_encendido);

    //console.log(dataAll);
    
    const groupByThree = (data) => {
      const result = {
        fecha_local: [],
        tiempo: [],
        porc_encendido: []
      };
      for (let i = 0; i < data.length; i += 3) {
        const group = data.slice(i, i + 3);

        if (group.length === 3) {
          const fechaTercero = group[2].fecha_local;
          const promedioTiemposEncendidos = group.reduce((sum, item) => sum + item.tiempo, 0) / 3;
          const porcentajeEncendidoApagado = group.reduce((sum, item) => sum + item.porc_encendido, 0) / 3;
          result.fecha_local.push(fechaTercero);
          result.tiempo.push(promedioTiemposEncendidos.toFixed(0));
          result.porc_encendido.push(porcentajeEncendidoApagado.toFixed(2));
        }
      }      
      return result;
    }
    const dataGroupByThree = groupByThree(dataChannel);
    
    

    const groupByLastHour = (data) => {      
      
      const now = new Date() ;
      const timeZone = 3;

      let {fecha_local, tiempo, porc_encendido} = data;
      
      const currentTime = new Date(now.getTime() - (60 * 60 * 1000 * timeZone));      
      const oneHourAgo = new Date(now.getTime() - (60 * 60 * 1000 * (timeZone + 1)));   
      // Convertir las fechas a formato ISO 8601
      const nowISOString = currentTime.toISOString();
      const oneHourAgoISOString = oneHourAgo.toISOString();
      // Encontrar el índice de la última marca de tiempo menor o igual a la hora actual
      const lastIndexBeforeNow = fecha_local.findLastIndex(timestamp => timestamp <= nowISOString);
      // Encontrar el índice de la primera marca de tiempo mayor que la hora una hora atrás
      const firstIndexAfterOneHourAgo = fecha_local.findIndex(timestamp => timestamp > oneHourAgoISOString);      
      
      return {
        fecha_local:  fecha_local.slice(firstIndexAfterOneHourAgo, lastIndexBeforeNow + 1),
        tiempo: tiempo.slice(firstIndexAfterOneHourAgo, lastIndexBeforeNow + 1),
        porc_encendido: porc_encendido.slice(firstIndexAfterOneHourAgo, lastIndexBeforeNow + 1),
      }         
    }

    
    const dataGroupByThreeOneHour = groupByLastHour(dataGroupByThree);

    const myTimeStamps = dataGroupByThree.fecha_local;
    const maxPorcEncendido = Math.max(...dataGroupByThree.porc_encendido);
    const minPorcEncendido = Math.min(...dataGroupByThree.porc_encendido);
    const maxPorcEncendidoOneHour = Math.max(...dataGroupByThreeOneHour.porc_encendido);
    const minPorcEncendidoOneHour = Math.min(...dataGroupByThreeOneHour.porc_encendido);


    const maxArray = new Array(dataGroupByThree.fecha_local.length), minArray = new Array(dataGroupByThree.fecha_local.length); 
    const maxArrayOneHour = new Array(dataGroupByThreeOneHour.fecha_local.length), minArrayOneHour = new Array(dataGroupByThreeOneHour.fecha_local.length); 
    maxArray.fill(maxPorcEncendido);
    minArray.fill(minPorcEncendido);
    maxArrayOneHour.fill(maxPorcEncendidoOneHour);
    minArrayOneHour.fill(minPorcEncendidoOneHour);
    

    $maxValue.innerHTML = $cambiarSerieBtn.value == '24' ? maxPorcEncendido : maxPorcEncendidoOneHour;
    $minValue.innerHTML = $cambiarSerieBtn.value == '24' ? minPorcEncendido : minPorcEncendidoOneHour;
    

       
    var options = { 
        title: {
        text : `Porcentaje de encendido - ${$cambiarSerieLabel.innerHTML}`
        },
      chart: {
        type: 'line',
        height: 300,
        width: "100%",
        background: '#f4f4f4',        
        toolbar: {
          show: true,
          tools: {
            download: true,
            selection: true,
            zoom: false,
            zoomin: true,
            zoomout: true,
            pan: true,
            reset: true | '<img src="/static/icons/reset.png" width="20">',
            customIcons: []
          } 
        }                 
      },    
      series: [        
            {       
              name: "MAX % Enc. / Apag.",
              data: maxArray,
              color: 'red'             
            },
            {       
              name: "Porcentaje de encendido",
              data: dataGroupByThree.porc_encendido,
              color: '#e29578'             
            },                               
            {       
              name: "MIN % Enc. / Apag.",
              data: minArray,
              color: 'green'             
            }
            ],
              xaxis: {
              categories: dataGroupByThree.fecha_local,
              type: 'datetime'      
          },
      stroke: {
      show: true,
      curve: 'straight',
      lineCap: 'butt',
      colors: undefined,
      width: 1,
      dashArray: 0, 
    },
    tooltip: {
      x: {
        show: true,
        format: 'dd/MMM - HH:mm ',
        formatter: undefined,
    }
    }
    }  
    // Inicializar el gráfico chart_a1
    const idNameChart = `chart_${currentChannel.nombre_columna}`;
    var chart = new ApexCharts(document.getElementById(idNameChart), options);  

    // Renderizar el gráfico      
    chart.render();
  }



  if (currentChannel.nombre_columna.startsWith('a')){      
        console.log(`Canal analogico: ${currentChannel.nombre_columna}`);   
        showAnalogCard(currentChannel, dataChannels);
      }else {
        console.log(`Canal digital: ${currentChannel.nombre_columna}`); 
        showDigitalCard(currentChannel, dataChannels);             
      }

 </script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/scripts/usersFunctionsBtns.js"></script>


<%- include('partials/piedepagina') %>   
<%- include('partials/modal_editar_alarma') %>   
<%- include('partials/modal_agregar_alarma') %>   

</body>
</html>

